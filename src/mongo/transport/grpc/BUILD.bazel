load("//bazel:mongo_src_rules.bzl", "mongo_cc_library", "mongo_cc_unit_test", "mongo_idl_library")

package(default_visibility = ["//visibility:public"])

exports_files(glob([
    "*.cpp",
    "*.h",
    "*.inl",
    "*.hpp",
    "*.py",
    "*.in",
]))

filegroup(
    name = "grpc_global_hdrs",
    srcs = glob([
        "*.h",
        "*.inl",
        "*.hpp",
    ]),
)

mongo_cc_library(
    name = "grpc_transport_layer",
    srcs = [
        "//src/mongo/transport/grpc:client.cpp",
        "//src/mongo/transport/grpc:client_cache.cpp",
        "//src/mongo/transport/grpc:grpc_session_manager.cpp",
        "//src/mongo/transport/grpc:grpc_transport_layer_impl.cpp",
        "//src/mongo/transport/grpc:server.cpp",
        "//src/mongo/transport/grpc:service.cpp",
        "//src/mongo/transport/grpc:util.cpp",
        "//src/mongo/transport/grpc:wire_version_provider.cpp",
    ],
    deps = [
        "//src/mongo/client:connection_string",
        "//src/mongo/db:server_base",
        "//src/mongo/db:service_context",
        "//src/mongo/db:wire_version",
        "//src/mongo/db/commands:server_status_core",
        "//src/mongo/rpc:client_metadata",
        "//src/mongo/transport:service_executor",
        "//src/mongo/transport:session_manager",
        "//src/mongo/transport:transport_layer_common",
        "//src/mongo/transport/grpc:grpc_feature_flag_idl",
        "//src/mongo/util/net:network",
        "//src/mongo/util/net:ssl_util",
        "//src/mongo/util/options_parser",
        "//src/third_party/grpc:grpc++_reflection",
    ],
)

mongo_cc_library(
    name = "grpc_transport_mock",
    srcs = [
        "//src/mongo/transport/grpc:grpc_transport_layer_mock.cpp",
        "//src/mongo/transport/grpc:mock_client_stream.cpp",
        "//src/mongo/transport/grpc:mock_server_context.cpp",
        "//src/mongo/transport/grpc:mock_server_stream.cpp",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:service_context",
        "//src/mongo/rpc:client_metadata",
        "//src/mongo/transport/grpc:grpc_transport_layer",
        "//src/third_party/grpc:grpc++_reflection",
    ],
)

mongo_cc_unit_test(
    name = "grpc_transport_layer_test",
    srcs = [
        "//src/mongo/transport/grpc:channel_pool_test.cpp",
        "//src/mongo/transport/grpc:client_cache_test.cpp",
        "//src/mongo/transport/grpc:grpc_client_test.cpp",
        "//src/mongo/transport/grpc:grpc_session_test.cpp",
        "//src/mongo/transport/grpc:grpc_transport_layer_test.cpp",
        "//src/mongo/transport/grpc:mock_client_test.cpp",
        "//src/mongo/transport/grpc:mock_server_stream_test.cpp",
        "//src/mongo/transport/grpc:mock_stub_test.cpp",
        "//src/mongo/transport/grpc:server_test.cpp",
        "//src/mongo/transport/grpc:service_test.cpp",
    ],
    tags = ["mongo_unittest_second_group"],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:service_context_non_d",
        "//src/mongo/db:service_context_test_fixture",
        "//src/mongo/db:wire_version",
        "//src/mongo/rpc:message",
        "//src/mongo/transport:service_executor",
        "//src/mongo/transport/grpc:grpc_transport_layer",
        "//src/mongo/transport/grpc:grpc_transport_mock",
        "//src/mongo/util:clock_source_mock",
        "//src/mongo/util:periodic_runner_factory",
        "//src/third_party/grpc:grpc++_reflection",
    ],
)

mongo_cc_unit_test(
    name = "grpc_core_test",
    srcs = [
        "core_test.cpp",
    ],
    tags = ["mongo_unittest_first_group"],
    target_compatible_with = select({
        "//bazel/config:build_grpc_enabled": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        "//src/mongo:base",
        "//src/third_party/grpc:grpc++_reflection",
    ],
)

mongo_idl_library(
    name = "grpc_feature_flag_idl",
    src = "grpc_feature_flag.idl",
    idl_deps = [
        "//src/mongo/db:basic_types_idl_gen",
    ],
    deps = [
        "//src/mongo/db:basic_types_idl",
    ],
)

mongo_idl_library(
    name = "grpc_parameters_idl",
    src = "grpc_parameters.idl",
    target_compatible_with = select({
        "//bazel/config:build_grpc_enabled": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
)
