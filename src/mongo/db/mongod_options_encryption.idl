# This file is part of Percona Server for MongoDB.
#
# Copyright (C) 2018-present Percona and/or its affiliates. All rights reserved.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the Server Side Public License, version 1,
#    as published by MongoDB, Inc.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    Server Side Public License for more details.
#
#    You should have received a copy of the Server Side Public License
#    along with this program. If not, see
#    <http://www.mongodb.com/licensing/server-side-public-license>.
#
#    As a special exception, the copyright holders give permission to link the
#    code of portions of this program with the OpenSSL library under certain
#    conditions as described in each individual source file and distribute
#    linked combinations including the program with the OpenSSL library. You
#    must comply with the Server Side Public License in all respects for
#    all of the code used other than as permitted herein. If you modify file(s)
#    with this exception, you may extend this exception to your version of the
#    file(s), but you are not obligated to do so. If you do not wish to do so,
#    delete this exception statement from your version. If you delete this
#    exception statement from all source files in the program, then also delete
#    it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/mongod_options_encryption.h"
    configs:
        section: 'Encryption options'
        source: [ yaml, cli ]
        initializer:
            register: addMongodEncryptionOptions

configs:
    'security.enableEncryption':
        description: 'Enable encryption for the WiredTiger storage engine'
        short_name: enableEncryption
        arg_vartype: Switch

    'security.encryptionCipherMode':
        description: 'The cipher mode to use for encryption at rest'
        short_name: encryptionCipherMode
        arg_vartype: String
        requires: 'security.enableEncryption'
        validator:
            callback: validateEncryptionCipherModeSetting

    'security.encryptionKeyFile':
        description: 'The path to the local keyfile'
        short_name: encryptionKeyFile
        arg_vartype: String
        requires: 'security.enableEncryption'

    'security.vault.serverName':
        description: 'Hostname or IP address of the Vault server'
        short_name: vaultServerName
        arg_vartype: String
        requires: [ 'security.enableEncryption', 'security.vault.port', 'security.vault.tokenFile', 'security.vault.secret']
        conflicts: 'security.encryptionKeyFile'

    'security.vault.port':
        description: 'Port name the Vault server is listening on'
        short_name: vaultPort
        arg_vartype: Int
        requires: 'security.vault.serverName'
        validator:
            gte: 0
            lte: 65535

    'security.vault.tokenFile':
        description: "The path to file with Vault server's access token"
        short_name: vaultTokenFile
        arg_vartype: String
        requires: 'security.vault.serverName'

    'security.vault.secret':
        description: 'The name of the Vault secret where the master key is stored'
        short_name: vaultSecret
        arg_vartype: String
        requires: 'security.vault.serverName'

    'security.vault.rotateMasterKey':
        description: 'Rotate master key and re-encrypt keys db'
        short_name: vaultRotateMasterKey
        arg_vartype: Switch
        requires: 'security.vault.serverName'

    'security.vault.serverCAFile':
        description: >-
            CA certificate that was used to sign Vault's certificates
            - should be used when the Vault's CA certificate is not trusted
            by the machine that is going to connect to the Vault server
        short_name: vaultServerCAFile
        arg_vartype: String
        requires: 'security.vault.serverName'

    'security.vault.disableTLSForTesting':
        description: >-
            Disable using TLS for Vault server connections
            - is suitable for connecting Vault server in -dev mode or
            Vault server with TLS disabled. Should not be used in production
        short_name: vaultDisableTLSForTesting
        arg_vartype: Switch
        requires: 'security.vault.serverName'

    'security.kmip.serverName':
        description: 'Hostname or IP address of the KMIP server'
        short_name: kmipServerName
        arg_vartype: String
        requires: [ 'security.enableEncryption', 'security.kmip.port', 'security.kmip.serverCAFile', 'security.kmip.clientCertificateFile', 'security.kmip.clientKeyFile', 'security.kmip.keyIdentifier' ]
        conflicts: ['security.encryptionKeyFile', 'security.vault.ServerName']

    'security.kmip.port':
        description: 'Port name the KMIP server is listening on'
        short_name: kmipPort
        arg_vartype: Int
        requires: 'security.kmip.serverName'
        validator:
            gte: 0
            lte: 65535

    'security.kmip.serverCAFile':
        description: 'Name of the KMIP server CA file'
        short_name: kmipServerCAFile
        arg_vartype: String
        requires: 'security.kmip.serverCAFile'

    'security.kmip.clientCertificateFile':
        description: 'Name of the KMIP client CA file'
        short_name: kmipClientCertificateFile
        arg_vartype: String
        requires: 'security.kmip.clientCertificateFile'

    'security.kmip.clientKeyFile':
        description: 'Name of the KMIP client key file'
        short_name: kmipClientKeyFile
        arg_vartype: String
        requires: 'security.kmip.clientKeyFile'

    'security.kmip.keyIdentifier':
        description: 'Name of the KMIP key to use'
        short_name: kmipKeyIdentifier
        arg_vartype: String
        requires: 'security.kmip.keyIdentifier'

    'security.kmip.rotateMasterKey':
        description: 'Rotate master key and re-encrypt key db'
        short_name: kmipRotateMasterKey
        arg_vartype: Switch
        requires: 'security.kmip.serverName'

